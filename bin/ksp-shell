#!/usr/bin/perl

use strict;
use warnings;

BEGIN {
	unless ($>) {
		warn "$0: won't run as root\n";
		exit 1;
	}
}

use Reply;

{
	package Reply::Plugin::KSPShell;

	BEGIN { $INC{"Reply/Plugin/KSPShell.pm"} = $0 }

	use base 'Reply::Plugin';

	sub prompt { return "KSP> " }

	sub mangle_line($) {
		my ($self, $line) = @_;
		utf8::is_utf8($line) || utf8::decode($line) || utf8::upgrade($line);
		$line
	}
}

use vars qw($REPLY);
$REPLY = Reply->new(plugins => [
	"KSPShell",
	"Interrupt",
	"DataDump",
	"Colors",
	"ReadLine",
	"Hints",
	"Packages",
	"LexicalPersistence",
	"Autocomplete::Packages",
	"Autocomplete::Lexicals",
	"Autocomplete::Functions",
	"Autocomplete::Globals",
	"Autocomplete::Methods",
	"Autocomplete::Commands",
]);

use vars qw($TERM);
foreach my $p ($REPLY->_plugins) {
	if (UNIVERSAL::isa($p, "Reply::Plugin::ReadLine")) {
		$TERM = $p->{term};
		$TERM->ornaments(0) if UNIVERSAL::can($TERM, "ornaments");
	}
}

$REPLY->step(q{
	use strict;
	use warnings;
	use utf8;
	use Math::Trig;
	use Math::Vector::Real;
	use KSP qw(:all);
	KSP::SolarSystem->new("RealSolarSystem")->import_bodies();
	binmode $_, ":utf8" foreach \*STDOUT, \*STDERR;
	()
});

$REPLY->run();

undef $REPLY;

